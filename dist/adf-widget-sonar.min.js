!function(e,t){"use strict";function n(e){var t=this;t.version=e}function o(e){var t=this;"Please Setup the Widget"!=e&&(t.project=e.project.split(":")[1],t.url=e.url,angular.forEach(e.quality_index,function(e){"coverage"===e.metric?t.coverage=e.value:"blocker_violations"===e.metric?t.blocker=e.value:"alert_status"===e.metric?t.qualityGateStatus=e.value:"sqale_index"===e.metric?t.technicalDept=e.value:"vulnerabilities"===e.metric&&(t.vulnerabilities=e.value)}))}function r(e,t){var n=this;t.max=e.maxDays,t.current=e.daysLeft,n.result=e,n.progressProperties=t}function a(e,t){var n=this;if(0!=e.length){angular.forEach(e,function(e){e.subProject&&(e.subProject=e.subProject.slice(e.component.search(":")+1).replace(":"," ")),e.project&&(e.project=e.project.slice(e.component.search(":")+1).replace(":"," ")),e.component&&(e.component=e.component.slice(e.component.lastIndexOf(":")+1)),e.type&&(e.type=e.type.replace("_"," "));for(var t=0;t<e.tags.length;t++)0==t?e.tag=e.tags[t]:e.tag=e.tag+", "+e.tags[t]}),n.projects=new Array,n.projects[0]=new Object;for(var o=0,r=1,a=0;a<e.length;a++)"CLOSED"!==e[a].status&&(n.projects[o].project?e[a].project===n.projects[o].project&&e[a].subProject===n.projects[o].subProject&&e[a].component===n.projects[o].component?(n.projects[o].projectIssue[r]=e[a],r+=1):(o+=1,r=1,n.projects[o]=new Object,n.projects[o].project=e[a].project,n.projects[o].subProject=e[a].subProject,n.projects[o].component=e[a].component,n.projects[o].projectIssue=new Array,n.projects[o].projectIssue[0]=e[a]):(n.projects[o]=new Object,n.projects[o].project=e[a].project,n.projects[o].subProject=e[a].subProject,n.projects[o].component=e[a].component,n.projects[o].projectIssue=new Array,n.projects[o].projectIssue[0]=e[a]))}n.sorting=function(e){return"sortBySeverity"==t.sorting?n.sortBySeverity(e):n.sortByEffort(e)},n.sortBySeverity=function(e){for(var t=0,n=0;n<e.projectIssue.length;n++)"BLOCKER"===e.projectIssue[n].severity?t=4:"CRITICAL"===e.projectIssue[n].severity&&t<3?t=3:"MAJOR"===e.projectIssue[n].severity&&t<2?t=2:"MINOR"===e.projectIssue[n].severity&&t<1&&(t=1);return-t},n.sortByEffort=function(e){for(var t=0,n=0;n<e.projectIssue.length;n++)e.projectIssue[n].effort&&t<parseInt(e.projectIssue[n].effort.slice(0,e.projectIssue[n].effort.search("m")))&&(t=parseInt(e.projectIssue[n].effort.slice(0,e.projectIssue[n].effort.search("m"))));return-t}}function s(e){var t=this;if("Please Setup the Widget"!=e){t.projectLeft=e.projectLeft.split(":")[1],t.projectRight=e.projectRight.split(":")[1];var n=e.resp.projectLeft.data.component.measures,o=e.resp.projectRight.data.component.measures,r=[];angular.forEach(n,function(e){angular.forEach(o,function(t){t.metric===e.metric&&r.push({metricName:e.metric,projectValLeft:e.value,projectValRight:t.value})})}),t.compareTable=r}}function i(e,t,n,o){var r=this;e.updateProjects=function(){var t;t=e.config.apiUrl?e.config.apiUrl:o.url,r.projects=[],n.getProjects(t).then(function(e){e.forEach(function(e){var t={name:e.k};r.projects.push(t)})})},e.updateProjects()}function l(e,t){function n(){for(var n={legend:{display:!0,position:"bottom"},responsive:!0},o={labels:[],data:[],series:[],"class":"chart-line",options:n},r=0;r<e.length;r++)o.series.push(t[e[r].metric]),o.data.push(e[r].values);return o.labels=e[0].dates,o}var o=this;console.log(e),"Please Setup the Widget"!=e&&(o.chart=n())}function i(e,t,n){function o(t){var n=t.date,o=t.mode;if("day"===o)for(var r=new Date(n).setHours(0,0,0,0),a=0;a<e.events.length;a++){var s=new Date(e.events[a].date).setHours(0,0,0,0);if(r===s)return e.events[a].status}return""}var r=this;e.config.timespan||(e.config.timespan={}),r.url=n.url,e.config.timespan.fromDateTime&&(e.config.timespan.fromDateTime=new Date(e.config.timespan.fromDateTime),e.config.timespan.toDateTime=new Date(e.config.timespan.toDateTime)),e.updateProjects=function(){var o;o=e.config.apiUrl?e.config.apiUrl:n.url,r.projects=[],t.getProjects(o).then(function(e){e.forEach(function(e){var t={name:e.k};r.projects.push(t)})})},e.updateProjects(),e.inlineOptions={customClass:o,minDate:new Date,showWeeks:!0},e.dateOptions||(e.dateOptions={formatYear:"yy",startingDay:1}),e.toggleMin=function(){e.inlineOptions.minDate=e.inlineOptions.minDate?null:new Date,e.dateOptions.minDate=e.inlineOptions.minDate},e.toggleMin(),e.open1=function(){e.popup1.opened=!0},e.open2=function(){e.popup2.opened=!0},e.formats=["yyyy-MM-dd","yyyy/MM/dd","dd.MM.yyyy","shortDate"],e.format=e.formats[0],e.altInputFormats=["M!/d!/yyyy"],e.popup1={opened:!1},e.popup2={opened:!1};var a=new Date;a.setDate(a.getDate()+1);var s=new Date(a);s.setDate(a.getDate()+1),e.events=[{date:a,status:"full"},{date:s,status:"partially"}]}function c(e){var t=this;console.log(e),e&&(console.log(e),e.support?t.support=e:t.data=e)}function p(e,t,n){function o(e,t){if(e&&t){var n=e.split("."),o=t.split(".");return n[0]>o[0]||n[0]===o[0]&&n[1]>=o[1]}}function r(t){var n=t+"/api/server/version";return e({method:"GET",url:n,headers:{Accept:"application/json"}}).then(function(e){return e.data})}function a(e){return e+"/api/projects/index?format=json"}function s(e){return e+"/api/resources?metrics=ncloc,coverage"}function i(e){return e+"/api/issues/search?assignees=__me__"}function l(e,t){return e+"/api/measures/component?componentKey="+t+"&metricKeys=open_issues,ncloc,public_documented_api_density,duplicated_lines_density,sqale_index"}function c(e,t){return e+"/api/measures/component?componentKey="+t+"&metricKeys=coverage,blocker_violations,alert_status,sqale_index,vulnerabilities"}function p(e,t){var n=new Date(e),o=new Date(t),r=new Date,a=u(n,o),s=u(r,o);return{maxDays:a,daysLeft:s}}function u(e,t){if(t<e)return 0;var n=864e5;e.setHours(0,0,0,1),t.setHours(23,59,59,999);var o=t-e,r=Math.ceil(o/n),a=Math.floor(r/7);r-=2*a;var s=e.getDay(),i=t.getDay();return s-i>1&&(r-=2),0===s&&6!=i&&(r-=1),6===i&&0!=s&&(r-=1),r}function d(e){var t="";return e.linesOfCode&&(t+="ncloc,"),e.technicalDebt&&(t+="sqale_index,"),e.amountTest&&(t+="tests,"),e.testCoverage&&(t+="coverage,"),e.issues&&(t+="open_issues,"),e.rulesviolations&&(t+="duplicated_lines_density,"),t.slice(0,-1)}function m(n,o,r){var a=l(n,o),s=l(n,r),i=e.get(a),c=e.get(s);return t.all([i,c]).then(function(e){var t=e[0],n=e[1],a={projectLeft:t,projectRight:n};return{resp:a,projectLeft:o,projectRight:r}})}function g(t,n,a,s){var i,l,c,p=[],u=d(a);if("dynamic"===s.type){var m=new Date;switch(s.dynamic){case"week":l=new Date(m.getTime()-6048e5);break;case"month":l=new Date(m.getFullYear(),m.getMonth()-1,m.getDay());break;case"year":l=new Date(m.getFullYear()-1,m.getMonth(),m.getDay())}c=m}else"static"===s.type&&(l=s.fromDateTime,c=s.toDateTime);var g="6.2";return new Promise(function(a){var s=r(t).then(function(e){return e}),d=s.then(function(e){return o(g,e)}),m=d.then(function(o){return o?(i=l&&c?t+"/api/timemachine?resource="+n+"&metrics="+u+"&fromDateTime="+l+"&toDateTime="+c:t+"/api/timemachine?resource="+n+"&metrics="+u,e({method:"GET",url:i,headers:{Accept:"application/json"}}).then(function(e){for(var t=e.data[0],n=t.cols,o=t.cells,r=0;r<n.length;r++){for(var a=[],s=[],i=0;i<o.length;i++)s[i]=o[i].d.split("T")[0],a[i]=o[i].v[r];var l={metric:n[r].metric,values:a,dates:s};p.push(l)}return p})):(l&&c?(l=l.toISOString().replace(/T.*/,"").split("-").join("-"),c=c.toISOString().replace(/T.*/,"").split("-").join("-"),i=t+"/api/measures/search_history?component="+n+"&metrics="+u+"&from="+l+"&to="+c):i=t+"/api/measures/search_history?component="+n+"&metrics="+u,e({method:"GET",url:i,headers:{Accept:"application/json"}}).then(function(e){return e.data.measures.forEach(function(e){var t=[],n=[];e.history.forEach(function(e){t.push(e.date.split("T")[0]),n.push(e.value)});var o={metric:e.metric,values:n,dates:t};p.push(o)}),p}))});setTimeout(function(){a(m)})})}function h(e){for(var t=0,n=0,o=0;o<e.length;o++)if(e[o].msr){if(e[o].msr[0]){var r=e[o].msr[0].val;t+=r}if(e[o].msr[1]){var a=e[o].msr[1].val;n+=a}}return n/=e.length,{linesOfCode:t,coverage:n}}function f(t){var n=a(t);return e({method:"GET",url:n,headers:{Accept:"application/json"}}).then(function(e){return e.data})}function v(t){var n="6.2";return new Promise(function(a){var i=r(t).then(function(e){return e}),l=i.then(function(e){return o(n,e)}),c=l.then(function(o){if(o){var r=s(t);return e({method:"GET",url:r,headers:{Accept:"application/json"}}).then(function(e){var t=e.data;return h(t)})}return{support:!0,message:"This widget is only compatible with sonar v"+n+" or lower."}});setTimeout(function(){a(c)})})}function y(t){var n=i(t);return e({method:"GET",url:n,headers:{Accept:"application/json"}}).then(function(e){return e.data.issues})}function j(t,o){var r=c(t,o);return e({method:"GET",url:r,headers:{Accept:"application/json"}}).then(function(e){return{project:o,quality_index:e.data.component.measures,url:n.url}})}return{getProjects:f,getAllProjectsStatistics:v,getChartData:g,getMetrics:m,getProjectTime:p,getAllMyIssues:y,getProjectquality:j,getServerVersion:r}}var u=angular.module("adf.widget.sonar",["adf.provider","chart.js","ui.bootstrap","ui.bootstrap.datepicker","angular-svg-round-progressbar"]).constant("sonarEndpoint",{url:"https://builds.apache.org/analysis"}).constant("METRIC_NAMES",{open_issues:"Open Issues",ncloc:"Lines of Code",public_documented_api_density:"Public documented API density",duplicated_lines_density:"Duplicated Lines (%)",sqale_index:"SQALE index",coverage:"Coverage (%)",tests:"Tests"}).config(["dashboardProvider",function(e){e.widget("sonar-all-projects-statistics",{title:"Sonar Statistics of all Projects ",description:"Displays all SonarQube statistics",templateUrl:"{widgetsPath}/sonar/src/allProjects/view.html",reload:!0,resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,n){return t.apiUrl?e.getAllProjectsStatistics(t.apiUrl):n.url?e.getAllProjectsStatistics(n.url):"Please Setup the Widget"}]},category:"SonarQube",controller:"sonarStatsCtrl",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/allProjects/edit.html"}}).widget("sonar-linechart",{title:"Sonar Linechart of a Project",description:"Displays a linechart with different metrics",templateUrl:"{widgetsPath}/sonar/src/chart/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,n){var o;return o=t.apiUrl?t.apiUrl:n.url,o&&t.project&&t.metrics?e.getChartData(o,t.project,t.metrics,t.timespan):"Please Setup the Widget"}]},category:"SonarQube",controller:"sonarLineChart",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/chart/edit.html"}}).widget("sonar-compare",{title:"Sonar Project Compare",description:"Displays a table to compare two projects",templateUrl:"{widgetsPath}/sonar/src/compare/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,n){return t.apiUrl?e.getMetrics(t.apiUrl,t.projectname1,t.projectname2):n.url&&t.projectname1&&t.projectname2?e.getMetrics(n.url,t.projectname1,t.projectname2):"Please Setup the Widget"}]},category:"SonarQube",controller:"compare",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/compare/edit.html"}}).widget("project-progress",{title:"Project Progress",description:"Visualizes the progress of a project",templateUrl:"{widgetsPath}/sonar/src/project-progress/view.html",resolve:{data:["sonarApi","config",function(e,t){return t.projectBeginn?e.getProjectTime(t.projectBeginn,t.projectEnd):"Please Setup the Widget"}]},controller:"progress",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/project-progress/edit.html"}}).widget("version",{title:"Sonar Server Version",description:"Displays the current sonar server version",templateUrl:"{widgetsPath}/sonar/src/version/view.html",resolve:{data:["sonarApi","sonarEndpoint",function(e,t){return e.getServerVersion(t.url)}]},category:"SonarQube",controller:"version",controllerAs:"vm"}).widget("sonar-my-issues",{title:"Sonar My Issues",description:"Displays all issues of yourself",templateUrl:"{widgetsPath}/sonar/src/issues/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,n){return t.apiUrl?e.getAllMyIssues(t.apiUrl):n.url?e.getAllMyIssues(n.url):"Please Setup the Widget"}]},category:"SonarQube",controller:"sonarIssueCtrl",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/issues/edit.html"}}).widget("sonar-projectquality",{title:"Sonar Project Quality",description:"Displays metrics of a specific project",templateUrl:"{widgetsPath}/sonar/src/projectquality/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,n){return t.apiUrl&&t.project?e.getProjectquality(t.apiUrl,t.project):n.url&&t.project?e.getProjectquality(n.url,t.project):"Please Setup the Widget"}]},category:"SonarQube",controller:"qualityCtrl",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/projectquality/edit.html"}})}]);angular.module("adf.widget.sonar").run(["$templateCache",function(e){e.put("{widgetsPath}/sonar/src/allProjects/edit.html",'<form role=form ng-controller="editController as vm"><div class=form-group><label ng-if=!vm.url for=sample>API-URL</label> <input ng-if=!vm.url type=text class=form-control id=sample ng-model=config.apiUrl placeholder=Sonar-URL></div></form>'),e.put("{widgetsPath}/sonar/src/allProjects/view.html",'<style type=text/css>\n\n  div.sonar-content, div.sonar-content h1, div.sonar-content h4 {\n    text-align: right;\n    color: white;\n  }\n\n  .coverage {\n    background-color: #fcc700;\n    border-radius: 8px;\n  }\n  .linesOfCode {\n    background-color: #1B7DAA;\n    margin-bottom: 2%;\n    border-radius: 8px;\n  }\n  .linesOfCodePencil {\n    float: left;\n    font-size: 3em;\n    margin-top: 25px;\n  }\n  .coverageTask {\n    float: left;\n    font-size: 3em;\n    margin-top: 25px;\n  }\n</style><div><div class="sonar-content col-md-12"><div ng-if=vm.data.linesOfCode class="col-md-12 linesOfCode"><span class="glyphicon glyphicon-pencil linesOfCodePencil"></span><h1>{{(vm.data.linesOfCode | number)||0}}</h1><h4>Lines of code</h4></div><div ng-if=vm.data.linesOfCode class="col-md-12 coverage"><span class="glyphicon glyphicon-tasks coverageTask"></span><h1>{{(vm.data.coverage | number:2)||0}}%</h1><h4>Average test coverage</h4></div></div><div class="alert alert-warning" ng-if=vm.support>{{vm.support.message}}</div></div>'),e.put("{widgetsPath}/sonar/src/chart/edit.html",'<style type=text/css></style><form role=form><div class=form-group ng-controller="editController as vm"><label ng-if=!vm.url for=sample>API-URL</label><p ng-if=!vm.url><input class=form-control id=sample ng-model=config.apiUrl placeholder=Sonar-URL type=text ng-change=updateProjects()></p><label for=sample>Project</label> (*Required)<p><input id=project name=project type=text class=form-control autocomplete=off placeholder="Choose project" ng-model=config.project required uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"></p><label for=sample>Timespan</label><p><label class=radio-inline><input name=timespan ng-model=config.timespan.type type=radio value=dynamic>Dynamic</label> <label class=radio-inline><input name=timespan ng-model=config.timespan.type type=radio value=static>Static</label> <label class=radio-inline><input name=timespan ng-model=config.timespan.type type=radio value=no>None</label></p><div ng-if="config.timespan.type==\'static\'"><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup1.opened ng-model=config.timespan.fromDateTime placeholder=von show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open1() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup2.opened ng-model=config.timespan.toDateTime placeholder=bis show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open2() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p></div><p ng-if="config.timespan.type==\'dynamic\'"><label class=radio-inline><input name=timespan.dynamic ng-model=config.timespan.dynamic type=radio value=week>last week</label> <label class=radio-inline><input name=timespan.dynamic ng-model=config.timespan.dynamic type=radio value=month>last month</label> <label class=radio-inline><input name=timespan.dynamic ng-model=config.timespan.dynamic type=radio value=year>last year</label></p><label for=sample>Metric Selection</label><div class=checkbox><label><input ng-model=config.metrics.linesOfCode type=checkbox>Lines of Code</label></div><div class=checkbox><label><input ng-model=config.metrics.technicalDebt type=checkbox>Technical Debt</label></div><div class=checkbox><label><input ng-model=config.metrics.amountTest type=checkbox>Number Unit-Tests</label></div><div class=checkbox><label><input ng-model=config.metrics.testCoverage type=checkbox>Test Coverage</label></div><div class=checkbox><label><input ng-model=config.metrics.issues type=checkbox>Open Issues</label></div><div class=checkbox><label><input ng-model=config.metrics.rulesviolations type=checkbox>Duplicate Code (%)</label></div></div></form>'),e.put("{widgetsPath}/sonar/src/chart/view.html",'<div class="alert alert-info" ng-if=!vm.chart>Please configure the widget</div><div ng-if=vm.chart><canvas id=line class="chart chart-line" chart-data=vm.chart.data chart-labels=vm.chart.labels chart-series=vm.chart.series chart-options=vm.chart.options></canvas></div>'),e.put("{widgetsPath}/sonar/src/compare/edit.html",'<form role=form><div class=form-group ng-controller="editController as vm"><label ng-if=!vm.url for=url>API-URL</label> <input ng-if=!vm.url type=text class=form-control id=url ng-model=config.apiUrl placeholder=Sonar-URL ng-change=updateProjects()> <label for=project1>Choose Project 1</label> <input type=text class=form-control id=project1 ng-model=config.projectname1 ng-required=true placeholder="Project 1" uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"> <label for=project2>Choose Project 2</label> <input type=text class=form-control id=project2 ng-model=config.projectname2 ng-required=true placeholder="Project 2" uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"></div></form>'),e.put("{widgetsPath}/sonar/src/compare/view.html",'<div class="alert alert-info" ng-if=!vm.compareTable>Please configure the widget</div><div ng-if=vm.compareTable class="col-md-12 centerText"><table class=table><tr><th>Metric</th><th>{{vm.projectLeft}}</th><th>{{vm.projectRight}}</th></tr><tr ng-repeat="entry in vm.compareTable"><td>{{entry.metricName}}</td><td>{{entry.projectValLeft}}</td><td>{{entry.projectValRight}}</td></tr></table></div>'),e.put("{widgetsPath}/sonar/src/issues/edit.html",'<div class=form-group><form role=form><div class=form-group ng-controller="editController as vm"><label ng-if=!vm.url for=sample>API-URL</label> <input ng-if=!vm.url type=text class=form-control ng-model=config.apiUrl placeholder=Sonar-URL></div></form><form role=form><div class=form-group><label for=sample>Sorting</label><select class=form-control id=sample ng-model=config.sorting><option disabled>Select your option</option><option value=sortByEffort>Sorting by Effort</option><option value=sortBySeverity>Sorting by Severity</option></select></div></form></div>'),e.put("{widgetsPath}/sonar/src/issues/view.html",'<style type=text/css>\n    .content {\n        text-align: left;\n        color: black;\n    }\n\n    .tagContent {\n        color: grey;\n        text-align: right;\n    }\n\n    .sonarIssue {\n        background-color: #F0F0F0;\n        margin-bottom: 20px;\n        border: 1px solid black;\n        padding: 2px;\n        border-radius: 1px;\n    }\n\n    .heading {\n        color: #1874CD;\n        font-size: small;\n        margin-top: 1%;\n    }\n\n    .pre-scrollable.content {\n        max-height: 500px;\n        overflow:scroll;\n    }\n\n</style><div ng-if=!vm.projects class="alert alert-info">You don\'t have any issues.</div><div ng-if=vm.projects class="pre-scrollable content"><div class="content col-md-12"><div ng-repeat="project in vm.projects| orderBy: vm.sorting"><div class=heading><span ng-if=project.project class="glyphicon glyphicon-folder-open"></span> {{project.project}} <span ng-if=project.subProject class="glyphicon glyphicon-folder-open"></span> {{project.subProject}} <span ng-if=project.component class="glyphicon glyphicon-file"></span> {{project.component}}<br></div><div class=sonarIssue ng-repeat="issue in project.projectIssue track by $index"><table width=100%><tr><td width=80% colspan=4><b>{{issue.message}}</b></td><td ng-if=issue.line>L{{issue.line}}</td></tr></table><table width=100% style=min-width:450px><tr><td width=15%>{{issue.type| lowercase}}</td><td width=15%><span ng-if="issue.severity == \'MAJOR\'" class="glyphicon glyphicon-chevron-up"></span> <span ng-if="issue.severity == \'MINOR\'" class="glyphicon glyphicon-chevron-down"></span> <span ng-if="issue.severity == \'INFO\'" class="glyphicon glyphicon-arrow-down"></span> <span ng-if="issue.severity == \'CRITICAL\'" class="glyphicon glyphicon-arrow-up"></span> <span ng-if="issue.severity == \'BLOCKER\'" class="glyphicon glyphicon-exclamation-sign"></span> {{issue.severity| lowercase}}</td><td width=15%>{{issue.status| lowercase}}</td><td width=15% ng-if=issue.effort><span class="glyphicon glyphicon-time"></span> {{issue.effort}} effort</td><td class=tagContent><span ng-if=issue.tag class="glyphicon glyphicon-tags"></span> {{issue.tag}}</td></tr></table></div></div></div></div>'),e.put("{widgetsPath}/sonar/src/project-progress/edit.html",'<form role=form><div class=form-group ng-controller=editController><label for=sample>Project</label> <input type=text class=form-control id=sample ng-model=config.projectname ng-required=true placeholder="Project name"> <label for=sample>Project Timespan</label><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup1.opened ng-model=config.projectBeginn placeholder=from show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open1() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup2.opened ng-model=config.projectEnd placeholder=to show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open2() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></form>'),e.put("{widgetsPath}/sonar/src/project-progress/view.html",'<style>\n  .daysLeft {\n    text-align: center;\n    max-height: 700px;\n  }\n\n  .info {\n    width: 65%;\n    margin-left: 17.5%;\n    margin-top: -80%;\n    margin-bottom: 35%;\n  }\n\n</style><div class="alert alert-info" ng-if=!vm.result.daysLeft>Please configure the widget</div><div ng-if=vm.result.daysLeft class=daysLeft><div ng-init="progress=vm.progressProperties"><round-progress max=progress.max current=progress.current color="{{ (current / max < 0.75) ? \'1B7DAA\' : \'1B7DAA\' }}" bgcolor=#F5F5F5 radius=360 stroke=67 semi=false rounded=true clockwise=true responsive=true duration=800 animation=easeInOutQuart animation-delay=0></round-progress></div><div class=info><h1 style=font-size:2em>{{config.projectname}}</h1><h1>{{vm.result.daysLeft}}/{{vm.result.maxDays}}</h1><p>Days left</p></div></div>'),e.put("{widgetsPath}/sonar/src/projectquality/edit.html",'<style type=text/css></style><form role=form><div class=form-group ng-controller="editController as vm"><label ng-if=!vm.url for=sample>API-URL</label><p ng-if=!vm.url><input class=form-control id=sample ng-model=config.apiUrl placeholder=Sonar-URL type=text ng-change=updateProjects()></p><label for=sample>Project</label> (*Required)<p><input id=project name=project type=text class=form-control autocomplete=off placeholder="Choose project" ng-model=config.project required uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"></p></div></form>'),e.put("{widgetsPath}/sonar/src/projectquality/view.html",'<style type=text/css>\n\n  div.sonar-content, div.sonar-content h1, div.sonar-content h5 a{\n    text-align: right;\n    color: white;\n  }\n\n  h4#headline{\n    color: white;\n    border: 2px solid white;\n    padding: 8px;\n    text-align: center;\n  }\n\n\n   div.sonar-content .statusQualitygate,div.sonar-content > .codeCoverage,\n   div.sonar-content > .blockerIssues,div.sonar-content >.technicalDept,div.sonar-content >.vulnerabilities {\n    border: 2px solid white;\n    margin-bottom: 2%;\n  }\n\n  div.sonar-content >.codeCoverage,div.sonar-content >.technicalDept,div.sonar-content >.blockerIssues,\n  div.sonar-content >.vulnerabilities, div.sonar-content>h4{\n    background-color: #1B7DAA;\n  }\n\n\n  .glyphiconStyle {\n    float: left;\n    font-size: 2.5em;\n    margin-top: 25px;\n  }\n\n  .error {\n    background-color: #E43B53;\n  }\n\n  .warning {\n    background-color: #DD7800;\n  }\n\n  .ok {\n    background-color: #B5CA00;\n  }\n\n  .unknown {\n    background-color: #777777;\n  }\n</style><div class="alert alert-info" ng-if=!vm.project>Please configure the widget</div><div class="sonar-content col-md-12" ng-if=vm.project><h4 id=headline>{{vm.project}}</h4><div ng-switch on=vm.qualityGateStatus><div ng-switch-when=OK><div class="ok col-md-6 statusQualitygate"><span class="glyphicon glyphicon-ok-sign glyphiconStyle"></span><h1>OK</h1><h5><a href={{vm.url}}/quality_gates>Quality Gate</a></h5></div></div><div ng-switch-when=ERROR><div class="error col-md-6 statusQualitygate"><h2>Failed</h2><h5><a href={{vm.url}}/quality_gates>Quality Gate</a></h5></div></div><div ng-switch-when=WARNING><div class="warning col-md-6 statusQualitygate"><h2>Warning</h2><h5><a href={{vm.url}}/quality_gates>Quality Gate</a></h5></div></div><div ng-switch-default><div class="unknown col-md-6 statusQualitygate"><h2>unknown</h2><h5><a href={{vm.url}}/quality_gates>Quality Gate</a></h5></div></div></div><div class="col-md-6 vulnerabilities"><span class="glyphicon glyphicon glyphicon-lock glyphiconStyle"></span><h1>{{vm.vulnerabilities}}</h1><h5>Vulnerabilities</h5></div><div class="col-md-6 codeCoverage"><span class="glyphicon glyphicon-tasks glyphiconStyle"></span><h1>{{vm.coverage||"/"}}</h1><h5>Code Coverage</h5></div><div class="col-md-6 blockerIssues"><span class="glyphicon glyphicon-exclamation-sign glyphiconStyle"></span><h1>{{vm.blocker||"/"}}</h1><h5>Blocker Issues</h5></div><div class="col-md-12 technicalDept"><span class="glyphicon glyphicon-time glyphiconStyle"></span><h1>{{vm.technicalDept+" days" ||"/"}}</h1><h5>Technical Dept</h5></div><a href="https://docs.sonarqube.org/latest/user-guide/metric-definitions/" class=pull-right>about metrics</a></div>'),e.put("{widgetsPath}/sonar/src/version/view.html","<div><h2>{{vm.version}}</h2></div>")}]),u.controller("version",n),n.$inject=["data"],u.controller("qualityCtrl",o),o.$inject=["data"],u.controller("progress",r),r.$inject=["data","roundProgressConfig"],u.controller("sonarIssueCtrl",a),a.$inject=["data","config"],u.controller("compare",s),s.$inject=["data"],u.controller("editController",i),u.controller("sonarLineChart",l),l.$inject=["data","METRIC_NAMES"],u.controller("editController",i),i.$inject=["$scope","sonarApi","sonarEndpoint"],u.controller("sonarStatsCtrl",c),c.$inject=["data"],u.factory("sonarApi",p),p.$inject=["$http","$q","sonarEndpoint"]}(window);