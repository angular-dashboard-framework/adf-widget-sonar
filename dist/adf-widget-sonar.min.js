!function(e,t){"use strict";function o(e,t){var o=this;t.max=e.maxDays,t.current=e.daysLeft,o.result=e,o.progressProperties=t}function n(e,t){var o=this;o.METRIC_NAMES=t,o.projectLeft=e.projectLeft,o.projectRight=e.projectRight}function a(e,t,o,n){var a=this;e.updateProjects=function(){var t;t=e.config.apiUrl?e.config.apiUrl:n.url,a.projects=[],o.getProjects(t).then(function(e){e.forEach(function(e){var t={name:e.k};a.projects.push(t)})})},e.updateProjects()}function r(e,t){for(var o=this,n=[],a=[],r=0;r<e.length;r++)n.push(t[e[r].metric]),a.push(e[r].values);o.series=n,o.labels=e[0].dates,o.values=a}function a(e,t,o){function n(t){var o=t.date,n=t.mode;if("day"===n)for(var a=new Date(o).setHours(0,0,0,0),r=0;r<e.events.length;r++){var i=new Date(e.events[r].date).setHours(0,0,0,0);if(a===i)return e.events[r].status}return""}var a=this;e.config.timespan||(e.config.timespan={}),e.config.timespan.fromDateTime&&(e.config.timespan.fromDateTime=new Date(e.config.timespan.fromDateTime),e.config.timespan.toDateTime=new Date(e.config.timespan.toDateTime)),e.updateProjects=function(){var n;n=e.config.apiUrl?e.config.apiUrl:o.url,a.projects=[],t.getProjects(n).then(function(e){e.forEach(function(e){var t={name:e.k};a.projects.push(t)})})},e.updateProjects(),e.inlineOptions={customClass:n,minDate:new Date,showWeeks:!0},e.dateOptions||(e.dateOptions={formatYear:"yy",startingDay:1}),e.toggleMin=function(){e.inlineOptions.minDate=e.inlineOptions.minDate?null:new Date,e.dateOptions.minDate=e.inlineOptions.minDate},e.toggleMin(),e.open1=function(){e.popup1.opened=!0},e.open2=function(){e.popup2.opened=!0},e.formats=["yyyy-MM-dd","yyyy/MM/dd","dd.MM.yyyy","shortDate"],e.format=e.formats[0],e.altInputFormats=["M!/d!/yyyy"],e.popup1={opened:!1},e.popup2={opened:!1};var r=new Date;r.setDate(r.getDate()+1);var i=new Date(r);i.setDate(r.getDate()+1),e.events=[{date:r,status:"full"},{date:i,status:"partially"}]}function i(e){var t=this;t.data=e}function s(e,t){function o(e){return e+"/api/projects/index?format=json"}function n(e){return e+"/api/resources?metrics=ncloc,coverage"}function a(e,t){return e+"/api/measures/component?componentKey="+t+"&metricKeys=open_issues,ncloc,public_documented_api_density,duplicated_lines_density,sqale_index"}function r(e,t){var o=new Date(e),n=new Date(t),a=new Date,r=i(o,n),s=i(a,n);return{maxDays:r,daysLeft:s}}function i(e,t){if(t<e)return 0;var o=864e5;e.setHours(0,0,0,1),t.setHours(23,59,59,999);var n=t-e,a=Math.ceil(n/o),r=Math.floor(a/7);a-=2*r;var i=e.getDay(),s=t.getDay();return i-s>1&&(a-=2),0===i&&6!=s&&(a-=1),6===s&&0!=i&&(a-=1),a}function s(e){var t="";return e.linesOfCode&&(t+="ncloc,"),e.technicalDebt&&(t+="sqale_index,"),e.amountTest&&(t+="tests,"),e.testCoverage&&(t+="coverage,"),e.issues&&(t+="open_issues,"),e.rulesviolations&&(t+="duplicated_lines_density,"),t.slice(0,-1)}function l(o,n,r){var i=a(o,n),s=a(o,r),l=e.get(i),c=e.get(s),p=t.all([l,c]).then(function(e){var t=e[0],o=e[1],n={projectLeft:t,projectRight:o};return n});return p}function c(t,o,n,a){var r,i,l,c=s(n);if("dynamic"===a.type){var p=new Date;switch(a.dynamic){case"week":i=new Date(p.getTime()-6048e5);break;case"month":i=new Date(p.getFullYear(),p.getMonth()-1,p.getDay());break;case"year":i=new Date(p.getFullYear()-1,p.getMonth(),p.getDay())}l=p}else"static"===a.type&&(i=a.fromDateTime,l=a.toDateTime);return r=i&&l?t+"/api/timemachine?resource="+o+"&metrics="+c+"&fromDateTime="+i+"&toDateTime="+l:t+"/api/timemachine?resource="+o+"&metrics="+c,e({method:"GET",url:r,headers:{Accept:"application/json"}}).then(function(e){for(var t=[],o=e.data[0],n=o.cols,a=o.cells,r=0;r<n.length;r++){for(var i=[],s=[],l=0;l<a.length;l++)s[l]=a[l].d.split("T")[0],i[l]=a[l].v[r];var c={metric:n[r].metric,values:i,dates:s};t.push(c)}return t})}function p(e){for(var t=0,o=0,n=0;n<e.length;n++){if(e[n].msr[0]){var a=e[n].msr[0].val;t+=a}if(e[n].msr[1]){var r=e[n].msr[1].val;o+=r}}return o/=e.length,{linesOfCode:t,coverage:o}}function d(t){var n=o(t);return e({method:"GET",url:n,headers:{Accept:"application/json"}}).then(function(e){return e.data})}function m(t){var o=n(t);return e({method:"GET",url:o,headers:{Accept:"application/json"}}).then(function(e){var t=e.data;return p(t)})}return{getProjects:d,getAllProjectsStatistics:m,getChartData:c,getMetrics:l,getProjectTime:r}}var l=angular.module("adf.widget.sonar",["adf.provider","chart.js","ui.bootstrap","ui.bootstrap.datepicker","angular-svg-round-progressbar"]).constant("sonarEndpoint",{url:"https://sonarqube.com"}).constant("METRIC_NAMES",{open_issues:"Open Issues",ncloc:"Lines of Code",public_documented_api_density:"Public documented API density",duplicated_lines_density:"Duplicated Lines (%)",sqale_index:"SQALE index",coverage:"Coverage (%)",tests:"Tests"}).config(["ChartJsProvider",function(e){e.setOptions({chartColors:["#16688d","#fdb45c"],responsive:!1,maintainAspectRatio:!0,legend:{display:!0}}),e.setOptions("line",{showLines:!0})}]).config(["dashboardProvider",function(e){e.widget("sonar-all-projects-statistics",{title:"Sonar Statistics of all Projects ",description:"Displays all SonarQube statistics",templateUrl:"{widgetsPath}/sonar/src/allProjects/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,o){return t.apiUrl?e.getAllProjectsStatistics(t.apiUrl):o.url?e.getAllProjectsStatistics(o.url):"Please Setup the Widget"}]},category:"SonarQube",controller:"sonarStatsCtrl",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/allProjects/edit.html"}}).widget("sonar-linechart",{title:"Sonar Linechart of a Project",description:"Displays a linechart with different metrics",templateUrl:"{widgetsPath}/sonar/src/chart/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,o){var n;return n=t.apiUrl?t.apiUrl:o.url,n&&t.project&&t.metrics?e.getChartData(t.apiUrl,t.project,t.metrics,t.timespan):"Please Setup the Widget"}]},category:"SonarQube",controller:"sonarLineChart",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/chart/edit.html"}}).widget("sonar-compare",{title:"Sonar Project Compare",description:"Displays a table to compare two projects",templateUrl:"{widgetsPath}/sonar/src/compare/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,o){return t.apiUrl?e.getMetrics(t.apiUrl,t.projectname1,t.projectname2):o.url&&t.projectname1&&t.projectname2?e.getMetrics(o.url,t.projectname1,t.projectname2):"Please Setup the Widget"}]},category:"SonarQube",controller:"compare",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/compare/edit.html"}}).widget("project-progress",{title:"Project Progress",description:"Visualizes the progress of a project",templateUrl:"{widgetsPath}/sonar/src/project-progress/view.html",resolve:{data:["sonarApi","config",function(e,t){return t.projectBeginn?e.getProjectTime(t.projectBeginn,t.projectEnd):"Please Setup the Widget"}]},controller:"progress",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/project-progress/edit.html"}})}]);angular.module("adf.widget.sonar").run(["$templateCache",function(e){e.put("{widgetsPath}/sonar/src/allProjects/edit.html","<form role=form><div class=form-group><label for=sample>API-URL</label> <input type=text class=form-control id=sample ng-model=config.apiUrl placeholder=Sonar-URL></div></form>"),e.put("{widgetsPath}/sonar/src/allProjects/view.html",'<style type=text/css>\n  .content {\n    text-align: right;\n    color: white;\n  }\n  .coverage {\n    background-color: #f0ad4e;\n    border-radius: 8px;\n  }\n  .linesOfCode {\n    background-color: #337ab7;\n    margin-bottom: 2%;\n    border-radius: 8px;\n  }\n  .linesOfCodePencil {\n    float: left;\n    font-size: 3em;\n    margin-top: 25px;\n  }\n  .coverageTask {\n    float: left;\n    font-size: 3em;\n    margin-top: 25px;\n  }\n</style><div><div class="content col-md-12"><div class="col-md-12 linesOfCode"><span class="glyphicon glyphicon-pencil linesOfCodePencil"></span><h1>{{(vm.data.linesOfCode | number)||0}}</h1><h4>Lines of code</h4></div><div class="col-md-12 coverage"><span class="glyphicon glyphicon-tasks coverageTask"></span><h1>{{(vm.data.coverage | number:2)||0}}%</h1><h4>Average test coverage</h4></div></div></div>'),e.put("{widgetsPath}/sonar/src/chart/edit.html",'<style type=text/css></style><form role=form><div class=form-group ng-controller="editController as vm"><label for=sample>API-URL</label><p><input class=form-control id=sample ng-model=config.apiUrl placeholder=Sonar-URL type=text ng-change=updateProjects()></p><label for=sample>Project</label> (*Required)<p><input id=project name=project type=text class=form-control autocomplete=off placeholder="Choose project" ng-model=config.project required uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"></p><label for=sample>Timespan</label><p><label class=radio-inline><input name=timespan ng-model=config.timespan.type type=radio value=dynamic>Dynamic</label> <label class=radio-inline><input name=timespan ng-model=config.timespan.type type=radio value=static>Static</label> <label class=radio-inline><input name=timespan ng-model=config.timespan.type type=radio value=no>None</label></p><div ng-if="config.timespan.type==\'static\'"><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup1.opened ng-model=config.timespan.fromDateTime placeholder=von show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open1() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup2.opened ng-model=config.timespan.toDateTime placeholder=bis show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open2() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p></div><p ng-if="config.timespan.type==\'dynamic\'"><label class=radio-inline><input name=timespan.dynamic ng-model=config.timespan.dynamic type=radio value=week>last week</label> <label class=radio-inline><input name=timespan.dynamic ng-model=config.timespan.dynamic type=radio value=month>last month</label> <label class=radio-inline><input name=timespan.dynamic ng-model=config.timespan.dynamic type=radio value=year>last year</label></p><label for=sample>Metric Selection</label><div class=checkbox><label><input ng-model=config.metrics.linesOfCode type=checkbox>Lines of Code</label></div><div class=checkbox><label><input ng-model=config.metrics.technicalDebt type=checkbox>Technical Debt</label></div><div class=checkbox><label><input ng-model=config.metrics.amountTest type=checkbox>Number Unit-Tests</label></div><div class=checkbox><label><input ng-model=config.metrics.testCoverage type=checkbox>Test Coverage</label></div><div class=checkbox><label><input ng-model=config.metrics.issues type=checkbox>Open Issues</label></div><div class=checkbox><label><input ng-model=config.metrics.rulesviolations type=checkbox>Duplicate Code (%)</label></div></div></form>'),e.put("{widgetsPath}/sonar/src/chart/view.html",'<canvas id=line class="chart chart-line" chart-data=vm.values chart-labels=vm.labels chart-series=vm.series chart-options=options chart-dataset-override=datasetOverride style="width: 100%"></canvas>'),e.put("{widgetsPath}/sonar/src/compare/edit.html",'<form role=form><div class=form-group ng-controller="editController as vm"><label for=url>API-URL</label> <input type=text class=form-control id=url ng-model=config.apiUrl placeholder=Sonar-URL ng-change=updateProjects()> <label for=project1>Choose Project 1</label> <input type=text class=form-control id=project1 ng-model=config.projectname1 ng-required=true placeholder="Project 1" uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"> <label for=project2>Choose Project 2</label> <input type=text class=form-control id=project2 ng-model=config.projectname2 ng-required=true placeholder="Project 2" uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"></div></form>'),e.put("{widgetsPath}/sonar/src/compare/view.html",'<div class="alert alert-info" ng-if=!vm.projectLeft>Please configure the widget</div><div ng-if=vm.projectLeft class="col-md-12 centerText"><table class=table><tr><th>Metric</th><th>{{vm.projectLeft.data.component.name}}</th><th>{{vm.projectRight.data.component.name}}</th></tr><tr ng-repeat="metric in vm.projectLeft.data.component.measures"><td>{{vm.METRIC_NAMES[metric.metric]}}</td><td>{{vm.projectLeft.data.component.measures[$index].value}}</td><td>{{vm.projectRight.data.component.measures[$index].value}}</td></tr></table></div>'),e.put("{widgetsPath}/sonar/src/project-progress/edit.html",'<form role=form><div class=form-group ng-controller=editController><label for=sample>Project</label> <input type=text class=form-control id=sample ng-model=config.projectname ng-required=true placeholder="Project name"> <label for=sample>Project Timespan</label><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup1.opened ng-model=config.projectBeginn placeholder=from show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open1() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup2.opened ng-model=config.projectEnd placeholder=to show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open2() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></form>'),e.put("{widgetsPath}/sonar/src/project-progress/view.html",'<style>\n  .daysLeft {\n    text-align: center;\n    max-height: 700px;\n  }\n\n  .info {\n    width: 65%;\n    margin-left: 17.5%;\n    margin-top: -80%;\n    margin-bottom: 35%;\n  }\n\n</style><div class="alert alert-info" ng-if=!vm.result.daysLeft>Please configure the widget</div><div ng-if=vm.result.daysLeft class=daysLeft><div ng-init="progress=vm.progressProperties"><round-progress max=progress.max current=progress.current color="{{ (current / max < 0.75) ? \'#EF3939\' : \'#337AB7\' }}" bgcolor=#F5F5F5 radius=360 stroke=67 semi=false rounded=true clockwise=true responsive=true duration=800 animation=easeInOutQuart animation-delay=0></round-progress></div><div class=info><h1 style=font-size:2em>{{config.projectname}}</h1><h1>{{vm.result.daysLeft}}/{{vm.result.maxDays}}</h1><p>Projekttage</p></div></div>')}]),l.controller("progress",o),o.$inject=["data","roundProgressConfig"],l.controller("compare",n),n.$inject=["data","METRIC_NAMES"],l.controller("editController",a),l.controller("sonarLineChart",r),r.$inject=["data","METRIC_NAMES"],l.controller("editController",a),a.$inject=["$scope","sonarApi","sonarEndpoint"],l.controller("sonarStatsCtrl",i),i.$inject=["data"],l.factory("sonarApi",s),s.$inject=["$http","$q"]}(window);