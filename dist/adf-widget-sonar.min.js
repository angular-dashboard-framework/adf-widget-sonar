!function(e,t){"use strict";function o(e){var t=this;t.name=e.name,angular.forEach(e.msr,function(e){"coverage"===e.key?t.coverage=e.frmt_val:"blocker_violations"===e.key?t.blocker=e.frmt_val:"quality_gate_details"===e.key&&(t.qualityGateStatus=e.data.split('"')[3])})}function n(e,t){var o=this;t.max=e.maxDays,t.current=e.daysLeft,o.result=e,o.progressProperties=t}function r(e,t){var o=this;if(0!=e.length){angular.forEach(e,function(e){e.subProject&&(e.subProject=e.subProject.slice(e.component.search(":")+1).replace(":"," ")),e.project&&(e.project=e.project.slice(e.component.search(":")+1).replace(":"," ")),e.component&&(e.component=e.component.slice(e.component.lastIndexOf(":")+1)),e.type&&(e.type=e.type.replace("_"," "));for(var t=0;t<e.tags.length;t++)0==t?e.tag=e.tags[t]:e.tag=e.tag+", "+e.tags[t]}),o.projects=new Array,o.projects[0]=new Object;for(var n=0,r=1,a=0;a<e.length;a++)"CLOSED"!==e[a].status&&(o.projects[n].project?e[a].project===o.projects[n].project&&e[a].subProject===o.projects[n].subProject&&e[a].component===o.projects[n].component?(o.projects[n].projectIssue[r]=e[a],r+=1):(n+=1,r=1,o.projects[n]=new Object,o.projects[n].project=e[a].project,o.projects[n].subProject=e[a].subProject,o.projects[n].component=e[a].component,o.projects[n].projectIssue=new Array,o.projects[n].projectIssue[0]=e[a]):(o.projects[n]=new Object,o.projects[n].project=e[a].project,o.projects[n].subProject=e[a].subProject,o.projects[n].component=e[a].component,o.projects[n].projectIssue=new Array,o.projects[n].projectIssue[0]=e[a]))}o.sorting=function(e){return"sortBySeverity"==t.sorting?o.sortBySeverity(e):o.sortByEffort(e)},o.sortBySeverity=function(e){for(var t=0,o=0;o<e.projectIssue.length;o++)"BLOCKER"===e.projectIssue[o].severity?t=4:"CRITICAL"===e.projectIssue[o].severity&&t<3?t=3:"MAJOR"===e.projectIssue[o].severity&&t<2?t=2:"MINOR"===e.projectIssue[o].severity&&t<1&&(t=1);return-t},o.sortByEffort=function(e){for(var t=0,o=0;o<e.projectIssue.length;o++)e.projectIssue[o].effort&&t<parseInt(e.projectIssue[o].effort.slice(0,e.projectIssue[o].effort.search("m")))&&(t=parseInt(e.projectIssue[o].effort.slice(0,e.projectIssue[o].effort.search("m"))));return-t}}function a(e,t){var o=this;o.METRIC_NAMES=t,o.projectLeft=e.projectLeft,o.projectRight=e.projectRight}function s(e,t,o,n){var r=this;e.updateProjects=function(){var t;t=e.config.apiUrl?e.config.apiUrl:n.url,r.projects=[],o.getProjects(t).then(function(e){e.forEach(function(e){var t={name:e.k};r.projects.push(t)})})},e.updateProjects()}function i(e,t){for(var o=this,n=[],r=[],a=0;a<e.length;a++)n.push(t[e[a].metric]),r.push(e[a].values);o.series=n,o.labels=e[0].dates,o.values=r}function s(e,t,o){function n(t){var o=t.date,n=t.mode;if("day"===n)for(var r=new Date(o).setHours(0,0,0,0),a=0;a<e.events.length;a++){var s=new Date(e.events[a].date).setHours(0,0,0,0);if(r===s)return e.events[a].status}return""}var r=this;e.config.timespan||(e.config.timespan={}),e.config.timespan.fromDateTime&&(e.config.timespan.fromDateTime=new Date(e.config.timespan.fromDateTime),e.config.timespan.toDateTime=new Date(e.config.timespan.toDateTime)),e.updateProjects=function(){var n;n=e.config.apiUrl?e.config.apiUrl:o.url,r.projects=[],t.getProjects(n).then(function(e){e.forEach(function(e){var t={name:e.k};r.projects.push(t)})})},e.updateProjects(),e.inlineOptions={customClass:n,minDate:new Date,showWeeks:!0},e.dateOptions||(e.dateOptions={formatYear:"yy",startingDay:1}),e.toggleMin=function(){e.inlineOptions.minDate=e.inlineOptions.minDate?null:new Date,e.dateOptions.minDate=e.inlineOptions.minDate},e.toggleMin(),e.open1=function(){e.popup1.opened=!0},e.open2=function(){e.popup2.opened=!0},e.formats=["yyyy-MM-dd","yyyy/MM/dd","dd.MM.yyyy","shortDate"],e.format=e.formats[0],e.altInputFormats=["M!/d!/yyyy"],e.popup1={opened:!1},e.popup2={opened:!1};var a=new Date;a.setDate(a.getDate()+1);var s=new Date(a);s.setDate(a.getDate()+1),e.events=[{date:a,status:"full"},{date:s,status:"partially"}]}function l(e){var t=this;t.data=e}function c(e,t){function o(e){return e+"/api/projects/index?format=json"}function n(e){return e+"/api/resources?metrics=ncloc,coverage"}function r(e){return e+"/api/issues/search?assignees=__me__"}function a(e,t){return e+"/api/measures/component?componentKey="+t+"&metricKeys=open_issues,ncloc,public_documented_api_density,duplicated_lines_density,sqale_index"}function s(e,t){return e+"/api/resources?resource="+t+"&metrics=coverage,blocker_violations,quality_gate_details"}function i(e,t){var o=new Date(e),n=new Date(t),r=new Date,a=l(o,n),s=l(r,n);return{maxDays:a,daysLeft:s}}function l(e,t){if(t<e)return 0;var o=864e5;e.setHours(0,0,0,1),t.setHours(23,59,59,999);var n=t-e,r=Math.ceil(n/o),a=Math.floor(r/7);r-=2*a;var s=e.getDay(),i=t.getDay();return s-i>1&&(r-=2),0===s&&6!=i&&(r-=1),6===i&&0!=s&&(r-=1),r}function c(e){var t="";return e.linesOfCode&&(t+="ncloc,"),e.technicalDebt&&(t+="sqale_index,"),e.amountTest&&(t+="tests,"),e.testCoverage&&(t+="coverage,"),e.issues&&(t+="open_issues,"),e.rulesviolations&&(t+="duplicated_lines_density,"),t.slice(0,-1)}function p(o,n,r){var s=a(o,n),i=a(o,r),l=e.get(s),c=e.get(i),p=t.all([l,c]).then(function(e){var t=e[0],o=e[1],n={projectLeft:t,projectRight:o};return n});return p}function d(t,o,n,r){var a,s,i,l=c(n);if("dynamic"===r.type){var p=new Date;switch(r.dynamic){case"week":s=new Date(p.getTime()-6048e5);break;case"month":s=new Date(p.getFullYear(),p.getMonth()-1,p.getDay());break;case"year":s=new Date(p.getFullYear()-1,p.getMonth(),p.getDay())}i=p}else"static"===r.type&&(s=r.fromDateTime,i=r.toDateTime);return a=s&&i?t+"/api/timemachine?resource="+o+"&metrics="+l+"&fromDateTime="+s+"&toDateTime="+i:t+"/api/timemachine?resource="+o+"&metrics="+l,e({method:"GET",url:a,headers:{Accept:"application/json"}}).then(function(e){for(var t=[],o=e.data[0],n=o.cols,r=o.cells,a=0;a<n.length;a++){for(var s=[],i=[],l=0;l<r.length;l++)i[l]=r[l].d.split("T")[0],s[l]=r[l].v[a];var c={metric:n[a].metric,values:s,dates:i};t.push(c)}return t})}function u(e){for(var t=0,o=0,n=0;n<e.length;n++){if(e[n].msr[0]){var r=e[n].msr[0].val;t+=r}if(e[n].msr[1]){var a=e[n].msr[1].val;o+=a}}return o/=e.length,{linesOfCode:t,coverage:o}}function m(t){var n=o(t);return e({method:"GET",url:n,headers:{Accept:"application/json"}}).then(function(e){return e.data})}function g(t){var o=n(t);return e({method:"GET",url:o,headers:{Accept:"application/json"}}).then(function(e){var t=e.data;return u(t)})}function f(t){var o=r(t);return e({method:"GET",url:o,headers:{Accept:"application/json"}}).then(function(e){return e.data.issues})}function h(t,o){var n=s(t,o);return e({method:"GET",url:n,headers:{Accept:"application/json"}}).then(function(e){return e.data[0]})}return{getProjects:m,getAllProjectsStatistics:g,getChartData:d,getMetrics:p,getProjectTime:i,getAllMyIssues:f,getProjectquality:h}}var p=angular.module("adf.widget.sonar",["adf.provider","chart.js","ui.bootstrap","ui.bootstrap.datepicker","angular-svg-round-progressbar"]).constant("sonarEndpoint",{url:"https://ecosystem.cloudogu.com/sonar"}).constant("METRIC_NAMES",{open_issues:"Open Issues",ncloc:"Lines of Code",public_documented_api_density:"Public documented API density",duplicated_lines_density:"Duplicated Lines (%)",sqale_index:"SQALE index",coverage:"Coverage (%)",tests:"Tests"}).config(["ChartJsProvider",function(e){e.setOptions({chartColors:["#16688d","#fdb45c"],responsive:!1,maintainAspectRatio:!0,legend:{display:!0}}),e.setOptions("line",{showLines:!0})}]).config(["dashboardProvider",function(e){e.widget("sonar-all-projects-statistics",{title:"Sonar Statistics of all Projects ",description:"Displays all SonarQube statistics",templateUrl:"{widgetsPath}/sonar/src/allProjects/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,o){return t.apiUrl?e.getAllProjectsStatistics(t.apiUrl):o.url?e.getAllProjectsStatistics(o.url):"Please Setup the Widget"}]},category:"SonarQube",controller:"sonarStatsCtrl",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/allProjects/edit.html"}}).widget("sonar-linechart",{title:"Sonar Linechart of a Project",description:"Displays a linechart with different metrics",templateUrl:"{widgetsPath}/sonar/src/chart/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,o){var n;return n=t.apiUrl?t.apiUrl:o.url,n&&t.project&&t.metrics?e.getChartData(t.apiUrl,t.project,t.metrics,t.timespan):"Please Setup the Widget"}]},category:"SonarQube",controller:"sonarLineChart",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/chart/edit.html"}}).widget("sonar-compare",{title:"Sonar Project Compare",description:"Displays a table to compare two projects",templateUrl:"{widgetsPath}/sonar/src/compare/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,o){return t.apiUrl?e.getMetrics(t.apiUrl,t.projectname1,t.projectname2):o.url&&t.projectname1&&t.projectname2?e.getMetrics(o.url,t.projectname1,t.projectname2):"Please Setup the Widget"}]},category:"SonarQube",controller:"compare",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/compare/edit.html"}}).widget("project-progress",{title:"Project Progress",description:"Visualizes the progress of a project",templateUrl:"{widgetsPath}/sonar/src/project-progress/view.html",resolve:{data:["sonarApi","config",function(e,t){return t.projectBeginn?e.getProjectTime(t.projectBeginn,t.projectEnd):"Please Setup the Widget"}]},controller:"progress",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/project-progress/edit.html"}}).widget("sonar-my-issues",{title:"Sonar: My Issues",description:"Displays all issues of yourself",templateUrl:"{widgetsPath}/sonar/src/issues/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,o){return t.apiUrl?e.getAllMyIssues(t.apiUrl):o.url?e.getAllMyIssues(o.url):"Please Setup the Widget"}]},category:"SonarQube",controller:"sonarIssueCtrl",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/issues/edit.html"}}).widget("sonar-projectquality",{title:"Sonar: Projectquality of a Project",description:"Displays Status of the Quality Gate, Code Coverage and Blocker Issues",templateUrl:"{widgetsPath}/sonar/src/projectquality/view.html",resolve:{data:["sonarApi","config","sonarEndpoint",function(e,t,o){return t.apiUrl&&t.project?e.getProjectquality(t.apiUrl,t.project):o.url&&t.project?e.getProjectquality(o.url,t.project):"Please Setup the Widget"}]},category:"SonarQube",controller:"qualityCtrl",controllerAs:"vm",edit:{templateUrl:"{widgetsPath}/sonar/src/projectquality/edit.html"}})}]);angular.module("adf.widget.sonar").run(["$templateCache",function(e){e.put("{widgetsPath}/sonar/src/allProjects/edit.html","<form role=form><div class=form-group><label for=sample>API-URL</label> <input type=text class=form-control id=sample ng-model=config.apiUrl placeholder=Sonar-URL></div></form>"),e.put("{widgetsPath}/sonar/src/allProjects/view.html",'<style type=text/css>\n  .content {\n    text-align: right;\n    color: white;\n  }\n  .coverage {\n    background-color: #f0ad4e;\n    border-radius: 8px;\n  }\n  .linesOfCode {\n    background-color: #337ab7;\n    margin-bottom: 2%;\n    border-radius: 8px;\n  }\n  .linesOfCodePencil {\n    float: left;\n    font-size: 3em;\n    margin-top: 25px;\n  }\n  .coverageTask {\n    float: left;\n    font-size: 3em;\n    margin-top: 25px;\n  }\n</style><div><div class="content col-md-12"><div class="col-md-12 linesOfCode"><span class="glyphicon glyphicon-pencil linesOfCodePencil"></span><h1>{{(vm.data.linesOfCode | number)||0}}</h1><h4>Lines of code</h4></div><div class="col-md-12 coverage"><span class="glyphicon glyphicon-tasks coverageTask"></span><h1>{{(vm.data.coverage | number:2)||0}}%</h1><h4>Average test coverage</h4></div></div></div>'),e.put("{widgetsPath}/sonar/src/chart/edit.html",'<style type=text/css></style><form role=form><div class=form-group ng-controller="editController as vm"><label for=sample>API-URL</label><p><input class=form-control id=sample ng-model=config.apiUrl placeholder=Sonar-URL type=text ng-change=updateProjects()></p><label for=sample>Project</label> (*Required)<p><input id=project name=project type=text class=form-control autocomplete=off placeholder="Choose project" ng-model=config.project required uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"></p><label for=sample>Timespan</label><p><label class=radio-inline><input name=timespan ng-model=config.timespan.type type=radio value=dynamic>Dynamic</label> <label class=radio-inline><input name=timespan ng-model=config.timespan.type type=radio value=static>Static</label> <label class=radio-inline><input name=timespan ng-model=config.timespan.type type=radio value=no>None</label></p><div ng-if="config.timespan.type==\'static\'"><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup1.opened ng-model=config.timespan.fromDateTime placeholder=von show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open1() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup2.opened ng-model=config.timespan.toDateTime placeholder=bis show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open2() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p></div><p ng-if="config.timespan.type==\'dynamic\'"><label class=radio-inline><input name=timespan.dynamic ng-model=config.timespan.dynamic type=radio value=week>last week</label> <label class=radio-inline><input name=timespan.dynamic ng-model=config.timespan.dynamic type=radio value=month>last month</label> <label class=radio-inline><input name=timespan.dynamic ng-model=config.timespan.dynamic type=radio value=year>last year</label></p><label for=sample>Metric Selection</label><div class=checkbox><label><input ng-model=config.metrics.linesOfCode type=checkbox>Lines of Code</label></div><div class=checkbox><label><input ng-model=config.metrics.technicalDebt type=checkbox>Technical Debt</label></div><div class=checkbox><label><input ng-model=config.metrics.amountTest type=checkbox>Number Unit-Tests</label></div><div class=checkbox><label><input ng-model=config.metrics.testCoverage type=checkbox>Test Coverage</label></div><div class=checkbox><label><input ng-model=config.metrics.issues type=checkbox>Open Issues</label></div><div class=checkbox><label><input ng-model=config.metrics.rulesviolations type=checkbox>Duplicate Code (%)</label></div></div></form>'),e.put("{widgetsPath}/sonar/src/chart/view.html",'<canvas id=line class="chart chart-line" chart-data=vm.values chart-labels=vm.labels chart-series=vm.series chart-options=options chart-dataset-override=datasetOverride style="width: 100%"></canvas>'),e.put("{widgetsPath}/sonar/src/compare/edit.html",'<form role=form><div class=form-group ng-controller="editController as vm"><label for=url>API-URL</label> <input type=text class=form-control id=url ng-model=config.apiUrl placeholder=Sonar-URL ng-change=updateProjects()> <label for=project1>Choose Project 1</label> <input type=text class=form-control id=project1 ng-model=config.projectname1 ng-required=true placeholder="Project 1" uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"> <label for=project2>Choose Project 2</label> <input type=text class=form-control id=project2 ng-model=config.projectname2 ng-required=true placeholder="Project 2" uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"></div></form>'),e.put("{widgetsPath}/sonar/src/compare/view.html",'<div class="alert alert-info" ng-if=!vm.projectLeft>Please configure the widget</div><div ng-if=vm.projectLeft class="col-md-12 centerText"><table class=table><tr><th>Metric</th><th>{{vm.projectLeft.data.component.name}}</th><th>{{vm.projectRight.data.component.name}}</th></tr><tr ng-repeat="metric in vm.projectLeft.data.component.measures"><td>{{vm.METRIC_NAMES[metric.metric]}}</td><td>{{vm.projectLeft.data.component.measures[$index].value}}</td><td>{{vm.projectRight.data.component.measures[$index].value}}</td></tr></table></div>'),e.put("{widgetsPath}/sonar/src/issues/edit.html","<div class=form-group><form role=form><div class=form-group><label for=sample>API-URL</label> <input type=text class=form-control id=sample ng-model=config.apiUrl placeholder=Sonar-URL></div></form><form role=form><div class=form-group><label for=sample>Sorting</label><select class=form-control id=sample ng-model=config.sorting placeholder=Test><option disabled selected>Select your option</option><option value=sortByEffort>Sorting by Effort</option><option value=sortBySeverity>Sorting by Severity</option></select></div></form></div>"),e.put("{widgetsPath}/sonar/src/issues/view.html",'<style type=text/css>\n    .content{\n        text-align: left;\n        color: black;\n    }\n    .tagContent{\n        color: grey;\n        text-align: right;\n    }\n    .linesOfCode {\n        background-color:#F0F0F0;\n        margin-bottom: 0.5%;\n        border-radius: 1px;\n    }\n    .heading {\n        color: #1874CD;\n        font-size: small;\n        margin-top:  1%;\n    }\n</style><div ng-if=!vm.projects class="alert alert-info">You don\'t have any issues.</div><div ng-if=vm.projects><div ng-repeat="project in vm.projects | orderBy: vm.sorting"><div class=heading><span ng-if=project.project class="glyphicon glyphicon-folder-open"></span> {{project.project}} <span ng-if=project.subProject class="glyphicon glyphicon-folder-open"></span> {{project.subProject}} <span ng-if=project.component class="glyphicon glyphicon-file"></span> {{project.component}}<br></div><div class="content col-md-20"><div class="col-md-20 linesOfCode" ng-repeat="issue in project.projectIssue track by $index"><table width=100%><tr><td width=80% colspan=4><b>{{issue.message}}</b></td><td ng-if=issue.line>L{{issue.line}}</td></tr></table><table width=100%><tr><td width=15%>{{issue.type | lowercase}}</td><td width=15%><span ng-if="issue.severity == \'MAJOR\'" class="glyphicon glyphicon-chevron-up"></span> <span ng-if="issue.severity == \'MINOR\'" class="glyphicon glyphicon-chevron-down"></span> <span ng-if="issue.severity == \'INFO\'" class="glyphicon glyphicon-arrow-down"></span> <span ng-if="issue.severity == \'CRITICAL\'" class="glyphicon glyphicon-arrow-up"></span> <span ng-if="issue.severity == \'BLOCKER\'" class="glyphicon glyphicon-exclamation-sign"></span> {{issue.severity | lowercase}}</td><td width=15%>{{issue.status | lowercase}}</td><td width=15% ng-if=issue.effort><span class="glyphicon glyphicon-time"></span> {{issue.effort}} effort</td><td class=tagContent><span ng-if=issue.tag class="glyphicon glyphicon-tags"></span> {{issue.tag}}</td></tr></table></div></div></div></div>'),e.put("{widgetsPath}/sonar/src/project-progress/edit.html",'<form role=form><div class=form-group ng-controller=editController><label for=sample>Project</label> <input type=text class=form-control id=sample ng-model=config.projectname ng-required=true placeholder="Project name"> <label for=sample>Project Timespan</label><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup1.opened ng-model=config.projectBeginn placeholder=from show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open1() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p><p class=input-group><input class=form-control datepicker-options=dateOptions is-open=popup2.opened ng-model=config.projectEnd placeholder=to show-button-bar=false type=text uib-datepicker-popup={{format}}> <span class=input-group-btn><button class="btn btn-default" ng-click=open2() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></form>'),e.put("{widgetsPath}/sonar/src/project-progress/view.html",'<style>\n  .daysLeft {\n    text-align: center;\n    max-height: 700px;\n  }\n\n  .info {\n    width: 65%;\n    margin-left: 17.5%;\n    margin-top: -80%;\n    margin-bottom: 35%;\n  }\n\n</style><div class="alert alert-info" ng-if=!vm.result.daysLeft>Please configure the widget</div><div ng-if=vm.result.daysLeft class=daysLeft><div ng-init="progress=vm.progressProperties"><round-progress max=progress.max current=progress.current color="{{ (current / max < 0.75) ? \'#EF3939\' : \'#337AB7\' }}" bgcolor=#F5F5F5 radius=360 stroke=67 semi=false rounded=true clockwise=true responsive=true duration=800 animation=easeInOutQuart animation-delay=0></round-progress></div><div class=info><h1 style=font-size:2em>{{config.projectname}}</h1><h1>{{vm.result.daysLeft}}/{{vm.result.maxDays}}</h1><p>Projekttage</p></div></div>'),e.put("{widgetsPath}/sonar/src/projectquality/edit.html",'<style type=text/css></style><form role=form><div class=form-group ng-controller="editController as vm"><label for=sample>API-URL</label><p><input class=form-control id=sample ng-model=config.apiUrl placeholder=Sonar-URL type=text ng-change=updateProjects()></p><label for=sample>Project</label> (*Required)<p><input id=project name=project type=text class=form-control autocomplete=off placeholder="Choose project" ng-model=config.project required uib-typeahead="project.name for project in vm.projects | limitTo:10 | filter:$viewValue"></p></div></form>'),e.put("{widgetsPath}/sonar/src/projectquality/view.html",'<style type=text/css>\n    .content {\n        text-align: right;\n        color: black;\n    }\n\n    .statusQualitygate {\n        border-radius: 8px;\n        margin-bottom: 2%;\n    }\n\n    .codeCoverage {\n        border-radius: 8px;\n        background-color: #f0ad4e;\n        margin-bottom: 2%;\n    }\n\n    .blockerIssues {\n        border-radius: 8px;\n        background-color: #1B7DAA;\n    }\n\n    .glyphiconStyle {\n        float: left;\n        font-size: 3em;\n        margin-top: 25px;\n    }\n\n    .error {\n        background-color: #E43B53;\n    }\n\n    .warning {\n        background-color: #DD7800;\n    }\n\n    .ok {\n        background-color: #B5CA00;\n    }\n\n    .unknown {\n        background-color: #777777;\n    }\n</style><div class="alert alert-info" ng-if=!vm.name>Please configure the widget</div><div class="content col-md-12" ng-if=vm.name><div ng-switch on=vm.qualityGateStatus><div ng-switch-when=OK><div class="ok col-md-12 statusQualitygate"><span class="glyphicon glyphicon-ok glyphiconStyle"></span><h1>Passed</h1><h4>Quality Gate</h4></div></div><div ng-switch-when=ERROR><div class="error col-md-12 statusQualitygate"><span class="glyphicon glyphicon-remove glyphiconStyle"></span><h1>Error</h1><h4>Quality Gate</h4></div></div><div ng-switch-when=WARNING><div class="warning col-md-12 statusQualitygate"><span class="glyphicon glyphicon-info-sign glyphiconStyle"></span><h1>Warning</h1><h4>Quality Gate</h4></div></div><div ng-switch-default><div class="unknown col-md-12 statusQualitygate"><span class="glyphicon glyphicon-question-sign glyphiconStyle"></span><h1>unknown</h1><h4>Quality Gate</h4></div></div></div><div class="col-md-12 codeCoverage"><span class="glyphicon glyphicon-tasks glyphiconStyle"></span><h1>{{vm.coverage||"unknown"}}</h1><h4>Code Coverage</h4></div><div class="col-md-12 blockerIssues"><span class="glyphicon glyphicon-exclamation-sign glyphiconStyle"></span><h1>{{vm.blocker||"unknown"}}</h1><h4>Blocker Issues</h4></div></div>')}]),p.controller("qualityCtrl",o),o.$inject=["data"],p.controller("progress",n),n.$inject=["data","roundProgressConfig"],p.controller("sonarIssueCtrl",r),r.$inject=["data","config"],p.controller("compare",a),a.$inject=["data","METRIC_NAMES"],p.controller("editController",s),p.controller("sonarLineChart",i),i.$inject=["data","METRIC_NAMES"],p.controller("editController",s),s.$inject=["$scope","sonarApi","sonarEndpoint"],p.controller("sonarStatsCtrl",l),l.$inject=["data"],p.factory("sonarApi",c),c.$inject=["$http","$q"]}(window);